# nastool---继续维护版（不是Media-Saber）
docker run -d \
    --name nas-tools \
    --hostname nas-tools \
    --network=host \
    --restart always \
    -v /share/Container/nastool/config:/config \
    -v /share/NAS:/NAS \
    -e PUID=0 \
    -e PGID=0 \
    -e UMASK=000 \
    -e NASTOOL_AUTO_UPDATE=true \
    -e NASTOOL_CN_UPDATE=true \
    -e REPO_URL="https://ghproxy.com/https://github.com/hsuyelin/nas-tools.git" \
    hsuyelin/nas-tools

# jellyfin
docker run -d \
    --name jellyfin \
    --hostname jellyfin \
    --device=/dev/dri:/dev/dri \
    --network=host \
    --restart always \
    -e PUID=0 \
    -e PGID=0 \
    -v /share/Container/jellyfin/config:/config \
    -v /share/Container/jellyfin/cache:/cache \
    -v /share/NAS:/NAS \
    nyanmisaka/jellyfin:latest

# 453Bmini
docker run -d \
    --name jellyfin \
    --hostname jellyfin \
    --device=/dev/dri:/dev/dri \
    --network=host \
    --restart always \
    -e PUID=0 \
    -e PGID=0 \
    -v /share/Container/jellyfin/config:/config \
    -v /share/Container/jellyfin/cache:/cache \
    -v /share/HDD-16:/HDD-16 \
    -v /share/HDD-4:/HDD-4 \
    nyanmisaka/jellyfin:latest

# qbittorrent
docker run -d \
    --name qbittorrent \
    --hostname qbittorrent \
    --network=host \
    --restart always \
    -e PUID=0 \
    -e PGID=0 \
    -e WEBUI_PORT=8080 \
    -v /share/Container/qbittorrent:/config \
    linuxserver/qbittorrent:latest

# 453Bmini port: 8080
docker run -d \
	--name qbittorrent \
	--hostname qbittorrent \
	--network=host \
	--restart always \
	-e PUID=0 \
	-e PGID=0 \
	-e WEBUI_PORT=8080 \
	-v /share/Container/qbittorrent:/config \
	-v /share/HDD-16/Download:/Download \
	linuxserver/qbittorrent:latest

# 453Bmini qBittorrent 刷流 port: 8082
docker run -d \
	--name qbittorrent-flush \
	--hostname qbittorrent \
	--network=host \
	--restart always \
	-e PUID=0 \
	-e PGID=0 \
	-e WEBUI_PORT=8082 \
	-v /share/Container/qbittorrent-flush:/config \
	-v /share/HDD-16/Download:/Download \
	linuxserver/qbittorrent:latest

# jacksky6/qb-web
# http://192.168.5.121:8080/
docker run -d \
        --restart always \
        --name qb-web-01 \
        -p 8088:80 \
        -e QBHOSTPORT=http://192.168.5.121:8080 \
        qb-web

# transmission4
docker run -d \
    --name transmission \
    --hostname transmission \
    --network=host \
    --restart always \
    -e PUID=0 \
    -e PGID=0 \
    -e TRANSMISSION_WEB_HOME=/transmission-web-control/src \
    -v /share/NAS:/NAS \
    -v /share/Container/transmission/config:/config \
    -v /share/Container/transmission/watch:/watch \
    -v /share/Container/transmission/transmission-web-control:/transmission-web-control \
    linuxserver/transmission:latest

# 453Bmini
docker run -d \
	--name transmission \
	--hostname transmission \
	--network=host \
	--restart always \
	-e PUID=0 \
	-e PGID=0 \
	-e TRANSMISSION_WEB_HOME=/transmission-web-control/src \
	-v /share/HDD-16/Download:/Download \
	-v /share/Container/transmission/config:/config \
	-v /share/Container/transmission/watch:/watch \
	-v /share/Container/transmission/transmission-web-control:/transmission-web-control \
	linuxserver/transmission:latest

# Firefox
# Doc[https://github.com/jlesage/docker-firefox]
docker run -d \
    --name=firefox2 \
    -e TZ=Asia/Hong_Kong \
    -e DISPLAY_WIDTH=1920 \
    -e DISPLAY_HEIGHT=1080 \
    -e KEEP_APP_RUNNING=1 \
    -e VNC_PASSWORD=123456.789 \
    -p 5800:5800 \
    -v /share/Container/firefox2/config:/config:rw \
    --shm-size 2g \
    jlesage/firefox

# portainer
docker run -d \
    -p 9000:9000 -p 8000:8000 \
    --name portainer \
    --restart=always \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v /share/Container/portainer/data:/data \
    portainer/portainer
docker run -d \
    -p 8000:8000 \
    -p 9000:9000 \
    --name portainer \
    --restart=always \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v /share/Container/portainer/data:/data \
    portainer/portainer

# IYUUPlus
docker run -d \
    --name iyuuplus \
    --hostname iyuuplus \
    --network=host \
    --restart always \
    -e PUID=0 \
    -e PGID=0 \
    -v /share/Container/qbittorrent/qBittorrent/BT_backup:/BT_backup \
    -v /share/Container/transmission/config/torrents:/torrents \
    -v /share/Container/iyuuplus:/IYUU \
    -v /share/Container/iyuuplus/db:/IYUU/db \
    iyuucn/iyuuplus:latest

# meida-saber
docker run -d \
    --name media-saber \
    --hostname media-saber \
    --network=host \
    --restart always \
    -v /share/Container/media-saber/config:/config \
    -v /share/NAS:/NAS \
    -e PUID=0 \
    -e PGID=0 \
    -e UMASK=000 \
    -e MEDIA_SABER_AUTH_EMAIL='xxx@qq.com' \
    -e MEDIA_SABER_AUTH_SLOGAN='xxx' \
    -e MEDIA_SABER_AUTO_UPDATE=true \
    xylplm/media-saber:latest

# 453Bmini
docker run -d \
	--name media-saber-dev \
	--hostname media-saber \
	--network=host \
	--restart always \
	-v /share/Container/media-saber/config:/config \
	-v /share/HDD-16:/HDD-16 \
	-e PUID=0 \
	-e PGID=0 \
	-e UMASK=000 \
	-e MEDIA_SABER_AUTH_EMAIL='xianxt0570@gmail.com' \
	-e MEDIA_SABER_AUTH_SLOGAN='mediaPT2023' \
	-e MEDIA_SABER_AUTO_UPDATE=true \
	xylplm/media-saber:latest
# dev
docker run -d \
	--name media-saber-dev \
	--hostname media-saber-dev \
	--network=host \
	--restart always \
	-v /share/Container/media-saber/config:/config \
	-v /share/HDD-16:/HDD-16 \
	-e PUID=0 \
	-e PGID=0 \
	-e UMASK=000 \
	-e MEDIA_SABER_AUTH_EMAIL='xianxt0570@gmail.com' \
	-e MEDIA_SABER_AUTH_SLOGAN='mediaPT2023' \
	-e MEDIA_SABER_AUTO_UPDATE=true \
	xylplm/media-saber:latest-beta
	xylplm/media-saber:latest-beta

# OCR
docker run -d \
    --name Baidu-OCR \
    --hostname Baidu-OCR \
    --network=host \
    --restart always \
    -e OCR_APP_ID='***' \
    -e OCR_API_KEY='***' \
    -e OCR_SECRET_KEY='***' \
    xylplm/media-saber-baidu-ocr

# vertex
docker run -d \
    --name vertex \
    --hostname vertex \
    -p 9000:3000 \
    -v /share/Container/vertex:/vertex \
    -e TZ=Asia/Shanghai \
    --restart unless-stopped \
    lswl/vertex:stable

# DDNSTO
# 453Bmini
# -v /etc/localtime:/etc/localtime:ro \
# --restart unless-stopped 重启不停止
docker run -d \
	--name=ddnsto \
	--network host \
	--restart unless-stopped \
	-e TOKEN=133743bc-cba8-4d71-8025-80ba3cb8216f \
	-e DEVICE_IDX=0 \
	-v /share/Container/ddnsto/config:/etc/localtime:ro \
	-e PUID=0 \
	-e PGID=0 \
	linkease/ddnsto

# cookiecloud
docker run -d \
    -e API_ROOT=/cookie \
    -p=8088:8088 \
    easychen/cookiecloud:latest

docker run -p=8088:8088 easychen/cookiecloud:latest

# halo-blog
docker run -d \
    --name halo \
    -p 8090:8090 \
    -v /share/Container/halo:/root/.halo2 \
    halohub/halo:2.14

# 查看映射目录
docker inspect id | grep Mounts -A 50

// ok